

@{ ViewBag.Title = "DANH MỤC KHÁCH HÀNG";

}
    }
@using System.Data;
@using System.Globalization;
<!DOCTYPE html>
<html lang="en">

<head>



    <style>
        a:hover {
            background-color: lightskyblue;
        }

        * {
            font-family: "Times New Roman";
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            /*         justify-content:;*/
            width: 50%;
            height: 300px;
        }

        .submit {
            height: 50px;
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: relative;
            top: 0;
            left: 0;
            height: 50px;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        .data_table {
            width: max-content;
        }

        .bieu_do {
            padding: 10px;
            margin: 10%;
            text-align: center;
            width: 200px;
            font-size: 16px;
            font-weight: 600;
            color: #fff;
            cursor: pointer;
            margin: 20px;
            height: 55px;
            text-align: center;
            border: none;
            background-size: 300% 100%;
            border-radius: 10px;
            moz-transition: all .4s ease-in-out;
            -o-transition: all .4s ease-in-out;
            -webkit-transition: all .4s ease-in-out;
            transition: all .4s ease-in-out;
        }

            .bieu_do:hover {
                background-position: 100% 0;
                moz-transition: all .4s ease-in-out;
                -o-transition: all .4s ease-in-out;
                -webkit-transition: all .4s ease-in-out;
                transition: all .4s ease-in-out;
            }

            .bieu_do:focus {
                outline: none;
            }

        .bieu_do {
            background-image: linear-gradient(to right, #0ba360, #3cba92, #30dd8a, #2bb673);
            box-shadow: 0 4px 15px 0 rgba(23, 168, 108, 0.75);
        }

        .chart {
            margin: 20px 0px 0px 0px;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .custom-checkbox {
            margin-top: 10px;
            display: inline-block;
            position: relative;
            padding-left: 30px;
            margin-right: 15px;
            cursor: pointer;
        }

            .custom-checkbox input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            border: 2px solid black;
            background-color: #ffffff;
        }

        .custom-checkbox:hover input ~ .checkmark {
            background-color: #ccc;
        }

        .custom-checkbox input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .custom-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        .checkContainer {
            height: 300px;
            overflow: auto;
            scrollbar-width: none;
        }

            .checkContainer::-webkit-scrollbar {
                width: 0.2em;
                background-color: transparent;
            }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 1;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .closeTab {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Điều chỉnh khoảng cách với h4 */
        }

        .closeIcon {
            display: inline-block;
            width: 30px;
            height: 25px;
            border-radius: 50%;
            background-color: white;
            color: black; /* Màu chữ x */
            text-align: center;
            line-height: 25px;
        }

        .tab.active {
            background-color: cornflowerblue; /* Màu nền tab khi active */
            color: #fff; /* Màu chữ khi active */
        }

        .tab.selected-tab {
            pointer-events: none;
            background-color: #3763a3; /* Màu nền của tab */
        }

            .tab.selected-tab a {
                color: white /* Màu nền của tab */
            }

            .tab.selected-tab .closeTab {
                pointer-events: auto;
            }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>
    <script type="text/javascript" src="Scripts/table2excel.js"></script>


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>DANH MỤC KHÁCH HÀNG</title>
    <meta content="" name="description">
    <meta content="Author" name="MJ Maraz">
    <link href="~/assets/images/favicon.png" rel="icon">
    <link href="~/assets/images/favicon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <!-- ========================================================= -->


    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/datatables.min.css">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/Styles/loader.css">
</head>
<!-- =============== Design & Develop By = MJ MARAZ   ====================== -->

<body style="background-color: #e0e8ee">
    <div class="loader" style="z-index:1"></div>

    <div class="sidebar">
        <div class="logo-details">

        </div>
        <ul class="nav-links" style="justify-content: center; display:flex;margin-left:10px">
            <li>
                <form id="dateForm" action="ViewDanhMucKH" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">
                        <span id="spanText" class="text-loading">[usp_DmDt9CN_SAP]</span>
                      
                    </div>
                    <h6>Chọn chi nhánh</h6>
                    <div class="select-btn" style="width:100px;margin-top:10px">
                        <select name="Chitiet" id="chitietselect" onchange="saveSelectedValueToCookie()">
                            <option value="" style="background-color: #020024;color:white">Chọn giá trị</option>
                            <option value="OPC_CT">OPC_CT Chi Nhánh Cần Thơ</option>
                            <option value="OPC_TG">OPC_TG Chi Nhánh Tiền Giang</option>
                            <option value="OPC_MD">OPC_MD Chi Nhánh Miền Đông</option>
                            <option value="OPC_TP">OPC_TP Chi Nhánh Hồ Chí Minh</option>
                            <option value="OPC_VT">OPC_VT Chi Nhánh Vũng Tàu</option>
                            <option value="OPC_NT">OPC_NT Chi Nhánh Nha Trang</option>
                            <option value="OPC_DN">OPC_DN Chi Nhánh Đà Nẵng</option>
                            <option value="OPC_NA">OPC_NA Chi Nhánh Nghệ An</option>
                            <option value="OPC_HN">OPC_HN Chi Nhánh Hà Nội</option>
                            <option value="">OPC Công Ty</option>
                        </select>
                    </div>
                    <div>
                        <button class="submit" type="submit" id="runReportButton" onclick="runReport(); saveNgay();">
                            Chạy Báo Cáo
                        </button>

                    </div>

                </form>
               
            </li>
        </ul>
    </div>


    <header class="header_part" style="background-color: #aec9e0; color: #3483bd ">
        @if (Request.Cookies["UserName"].Value == "Admin-cnct" || Request.Cookies["UserName"].Value == "Admin-cntg" || Request.Cookies["UserName"].Value == "Admin-cnmd" || Request.Cookies["UserName"].Value == "Admin-cnh1" || Request.Cookies["UserName"].Value == "Admin-cnvt"
                      || Request.Cookies["UserName"].Value == "Admin-cnnt" || Request.Cookies["UserName"].Value == "Admin - cndn" || Request.Cookies["UserName"].Value == "Admin - cnna" || Request.Cookies["UserName"].Value == "Admin - cnhn")
        {



            <a href="/Home/AboutCN" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        else
        {
            <a href="/Home/About" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        <h4 style="color: #3483bd">DANH MỤC KHÁCH HÀNG</h4>
       
    </header>
    <!-- =======  Data-Table  = Start  ========================== -->

    <div class="container">


        <div class="row">
            <div class="col-12">
                <div class="data_table">
                    <table id="example" class="table table-striped table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th>Chi Nhánh</th>

                                <th>Mã Đối Tượng</th>
                                <th>Tên Đối Tượng</th>
                          
                                <th>Địa Chỉ</th>
                                <th>Tỉnh TP</th>
                            
                                <tH>Distribution</tH>
                                <th>Industry</th>
                              
                                <th>MST</th>
                                <th>Chiết Khấu</th>
                                <th>CK OPC</th>
                                <th>CK 25</th>
                                <th>CK Cồn</th>
                                <th>CK Sủi</th>
                                <th>Payment Termp</th>
                                <th>Hạn TTCK TT</th>
                                <th>Tỷ Lệ</th>
                                <th>Hạn TT CKTT 1% </th>
                                <th>Tỷ Lệ 1%</th>
                                <th>Hạn TT</th>
                                <th>Hộ Kinh Doanh</th>
                                <th>Mã Đại Diện</th>
                                <th>Người Đại Diện</th>
                                <th>Mã TDV</th>
                                <th>Tên TDV</th>
                                <th>Mã CSKH</th>
                                <th>Tên CSKH</th>
                                <th>Giới Tính CSKH</th>
                                <th>Sinh Nhật CSKH</th>
                                <th>Ngày Cấp CSKH</th>
                                <th>SĐT CSKH</th>
                                <th>CMND CSKH</th>
                         
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (DataRow row2 in Model.Tables[0].Rows)
                            {
                                <tr>
                                    <td>@row2["Ma_Dvcs"]</td>

                                    <td>@row2["Ma_Dt"]</td>
                                    <td>@row2["Ten_Dt"]</td>
                           
                                    <td>@row2["Dia_Chi"]</td>
                                    <td>@row2["City"]</td>
                              
                                    <td>@row2["Distribution_T"]</td>
                                    <td>@row2["Industry_T"]</td>
                               
                                    <td>@row2["MST"]</td>
                                    <td>@row2["CK_T"]</td>
                                    <td class="num" style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["CK_OPC"]))</td>
                                    <td class="num" style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["CK_25"]))</td>
                                    <td class="num" style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["CK_Con"]))</td>
                                    <td class="num" style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["CK_Sui"]))</td>
                                    <td class="" style="text-align:right">@row2["Payment_T"]</td>
                                    <td class="" style="text-align:center">@String.Format("{0:n0}", Convert.ToDecimal(row2["Han_Tt_CkTt"]))</td>
                                    <td class="" style="text-align:center">@String.Format("{0:n0}", Convert.ToDecimal(row2["Ty_Le"]))</td>
                                    <td class="" style="text-align:center">@String.Format("{0:n0}", Convert.ToDecimal(row2["Han_Tt_CkTt1"]))</td>
                                    <td class="" style="text-align:center">@String.Format("{0:n0}", Convert.ToDecimal(row2["Ty_Le1"]))</td>
                                    <td class="" style="text-align:center">@String.Format("{0:n0}", Convert.ToDecimal(row2["Han_Tt"]))</td>
                                  <td>@row2["Ho_Kinh_Doanh"]</td>
                                    <td>@row2["Ma_Dai_Dien"]</td>
                                    <td>@row2["Nguoi_Dai_Dien"]</td>
                                    <td>@row2["Ma_TDV"]</td>
                                    <td>@row2["Ten_TDV"]</td>
                                    <td>@row2["Ma_CSKH"]</td>
                                    <td>@row2["Ten_CSKH"]</td>
                                    <td>@row2["GT_CSKH"]</td>
                                    <td>@row2["SN_CSKH1"]</td>
                                    <td>@row2["Ngay_Cap_CSKH"]</td>
                                    <td>@row2["SDT_CSKH"]</td>
                                    <td>@row2["CMND_CSKH"]</td>
                                
                                </tr>
                            }
                        </tbody>
                    </table>

                </div>
            </div>
        </div>
    </div>
    <!-- =======  Data-Table  = End  ===================== -->
    <!-- ============ Java Script Files  ================== -->


    <script src="~/assets/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/jquery-3.6.0.min.js"></script>
    <script src="~/assets/js/datatables.min.js"></script>
    <script src="~/assets/js/pdfmake.min.js"></script>
    <script src="~/assets/js/vfs_fonts.js"></script>
    <script src="~/assets/js/custom.js"></script>

    @*<script>
                $(document).ready(function () {
                var isExportingExcel = false;

                var table = $('#example').DataTable({
                    dom: 'Bfrtip',
                buttons: [
                {
                    extend: 'excelHtml5',
                text: 'Excel',
                action: function (e, dt, node, config) {
                    // Đặt biến cờ khi xuất Excel
                    isExportingExcel = true;
                dt.button(config).trigger();
                isExportingExcel = false;
                            }
                        }
                ]
                });

                // Bắt sự kiện khi nút Excel được nhấn
                table.on('buttons-action', function (e, buttonApi, dataTable, node, config) {
                    if (buttonApi.text() === 'Excel') {
                        // Kiểm tra nếu đang xuất Excel
                        if (isExportingExcel) {
                    console.log('Nút xuất Excel đã được nhấn!');
                            // Thêm mã xử lý xuất Excel ở đây nếu cần
                        }
                    }
                });
            });
        </script>*@

    <script>
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }
        function saveSelectedValueToCookie() {
            var selectedValue = $("#chitietselect").val();

            // Lấy giá trị của cookie hiện tại
            var existingCookieValue = getCookie('Ma_Dvcs_2');

            // Thời gian sống của cookie (đơn vị là giây, 30 ngày trong ví dụ này)
            var expirationTime = 30 * 24 * 60 * 60;

            // Tạo một object Date để thiết lập thời gian hết hạn của cookie
            var expirationDate = new Date();
            expirationDate.setTime(expirationDate.getTime() + (expirationTime * 1000));

            if (existingCookieValue) {
                // Nếu cookie đã tồn tại, cập nhật giá trị của nó và thiết lập thời gian hết hạn
                document.cookie = 'Ma_Dvcs_2=' + selectedValue;
            } else {
                // Nếu cookie chưa tồn tại, tạo một cookie mới với thời gian hết hạn
                document.cookie = 'Ma_Dvcs_2=' + selectedValue;
            }
        }
    </script>
    <script>
        document.getElementById("dropdownInput").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownList option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOption").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInput");
                    var selectedOption = document.querySelector("#dropdownList option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.getAttribute('data-ten');
                        document.cookie = 'Ma_Dt=' + tenDt;
                    } else {
                        var select = "";
                        document.cookie = 'Ma_Dt=' + select;
                    }

                });
            }
        });


    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy tất cả các ô chứa giá trị cột "Tiền TT"
            var tienTTCells = document.querySelectorAll('#example tbody td:nth-child(11)');

            // Biến để tính tổng
            var totalTienTT = 0;

            // Lặp qua từng ô và tính tổng
            tienTTCells.forEach(function (cell) {
                var valueWithoutCommas = cell.textContent.replace(/,/g, ''); // Loại bỏ dấu phẩy
                totalTienTT += parseFloat(valueWithoutCommas);
            });

            // Gán tổng vào ô của hàng tfoot
            document.querySelector('#total-row-tong-cong .total-tienTT').textContent = formatCurrency(totalTienTT);
        });

        // Hàm định dạng số tiền thành chuỗi có dấu phẩy
        function formatCurrency(amount) {
            return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function calculateTotal() {
                // Lấy tất cả các ô chứa giá trị cột "Tiền TT"
                var tienTTCells = document.querySelectorAll('#example tbody td:nth-child(11)');

                // Biến để tính tổng Tiền TT
                var totalTienTT = 0;

                // Lặp qua từng ô và tính tổng
                tienTTCells.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, ''); // Loại bỏ dấu phẩy
                    totalTienTT += parseFloat(valueWithoutCommas);
                });

                // Gán tổng Tiền TT vào ô của hàng tfoot "Tổng trang"
                document.querySelector('#total-row .total-tien').textContent = formatCurrency(totalTienTT);

                // Gán tổng Tiền TT vào ô của hàng tfoot "Tổng cộng(Tất cả)"
                /* document.querySelector('#total-row-tong-cong .total-tienTT').textContent = formatCurrency(totalTienTT);*/
            }

            // Gọi hàm calculateTotal khi trang được tải và khi có sự kiện thay đổi trên trang
            calculateTotal();

            // Hàm định dạng số tiền thành chuỗi có dấu phẩy
            function formatCurrency(amount) {
                return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }

            // Thêm sự kiện cho việc thay đổi trang
            $('#example').on('draw.dt', function () {
                calculateTotal();
            });
        });

    </script>





    <script>
        document.getElementById("dropdownInputTDV").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownListTDV option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOptionTDV").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInputTDV");
                    var selectedOption = document.querySelector("#dropdownListTDV option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var MaTDV = selectedOption.getAttribute('data-Ma_CbNv');
                        document.cookie = 'Ma_TDV=' + MaTDV;
                    } else {
                        var selected = "";
                        document.cookie = 'Ma_TDV=' + selected;
                    }
                });
            }
        });


    </script>



  
    <script>
        function runReport() {

            const uncheckedCheckboxIndexes = [];
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

            checkboxes.forEach((checkbox, index) => {
                if (!checkbox.checked) {
                    uncheckedCheckboxIndexes.push(index);
                }
            });

            // Lưu trạng thái vào Local Storage
            localStorage.setItem('uncheckedCheckboxIndexes', JSON.stringify(uncheckedCheckboxIndexes));
            // Hiển thị thẻ span có id là "spanText"
            const spanElement = document.getElementById("spanText");
            spanElement.style.display = "block";
        }
    </script>
 
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInput');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var maDtFromCookie = getCookie('Ma_Dt');

            // Đặt giá trị cho trường input và hidden input
            if (maDtFromCookie) {
                dropdownInput.value = maDtFromCookie;
                selectedOption.value = maDtFromCookie;
            }
        });
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInputTDV');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var matdvFromCookie = getCookie('Ma_TDV');

            // Đặt giá trị cho trường input và hidden input
            if (matdvFromCookie) {
                dropdownInput.value = matdvFromCookie;
                selectedOption.value = matdvFromCookie;
            }
        });
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInputVT');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var mavtFromCookie = getCookie('Ma_Vt');

            // Đặt giá trị cho trường input và hidden input
            if (mavtFromCookie) {
                dropdownInput.value = mavtFromCookie;
                selectedOption.value = mavtFromCookie;
            }
        });
        // Hàm lấy giá trị từ cookie
        function getCookie(cookieName) {
            var name = cookieName + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var cookieArray = decodedCookie.split(';');

            for (var i = 0; i < cookieArray.length; i++) {
                var cookie = cookieArray[i];
                while (cookie.charAt(0) == ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) == 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null;
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');
            const table = document.getElementById('example');

            checkboxes.forEach((checkbox, index) => {
                checkbox.addEventListener('change', function () {
                    const columnIndex = index;
                    const rows = table.querySelectorAll('tr');

                    rows.forEach(row => {
                        const cells = row.querySelectorAll('td, th');
                        cells[columnIndex].style.display = this.checked ? '' : 'none';
                    });
                });
            });
        });
    </script>
    <script>
        function handleFormSubmit(event) {
            event.preventDefault();
            showLoader();
            // Show the loader when the form is submitted

            const form = event.target;
            const actionUrl = `${form.action}`;
            window.location.href = actionUrl;
        }
       
        // Function to show the loader
        function showLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.remove("loader-hidden");
        }
        function saveNgay() {
            var from_date = document.getElementById("tu_ngay").value;
            var to_date = document.getElementById("den_ngay").value;
            var soPT = document.querySelector('input[name="So_PT"]').value;
            document.cookie = "So_PT=" + soPT;
            document.cookie = "From_date=" + from_date;
            document.cookie = "To_date=" + to_date;
        }
        // Function to hide the loader
        function hideLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.add("loader-hidden");
        }

        /*  Add an event listener to the form submission*/
        document.getElementById("dateForm").addEventListener("submit", (event) => {
            event.preventDefault();
            displaySelectedDate();
            // Show the loader when the form is submitted
            showLoader();

            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        });

        // Add event listener for window load event
        window.addEventListener("load", () => {
            // Hide the loader after the page is loaded
            hideLoader();
          
        });
    </script>

   
 

</body>

</html>
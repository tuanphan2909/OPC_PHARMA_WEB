﻿@using System.Data;
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, shrink-to-fit=no">
    <title>Form cộng tác viên</title>
    <link rel="stylesheet" href="/assets/bootstrap/css/bootstrap.min.css">
    <link rel="stylesheet" href="/assets/css/Application-Form.css">
    <style>
        #dropdownInput, #selectedOption, #Ten_NVPhuKho {
            border: 1px solid #ccc;
            border-radius: 5px;
            padding: 5px;
            margin-bottom: 5px;
            display: inline-block;
        }

        #dropdownInput {
            width: 18%; /* Adjust width as needed */
        }

        #selectedOption, #Ten_NVPhuKho {
            width: 80%; /* Adjust width as needed */
        }

        .ma-vt-input,
        .ten-vt-input,
        .han-muc-input {
            border-radius: 5px;
            padding: 5px;
            margin-bottom: 5px;
            display: inline-block;
            width: 80px; /* Adjust width as needed */
        }

        .han-muc-input {
            width: 150px; /* Adjust width as needed */
        }

        .ten-vt-input {
            width: 80%;
        }

        .ma-vt-input {
            width: 20%;
        }

        #SaveHD {
            display: block;
            margin: 10px auto; /* Center the buttons and add some spacing */
            padding: 10px 20px; /* Adjust padding as needed */
            font-size: 16px; /* Adjust font size as needed */
            background-color: #28a745; /* Green color */
            color: #fff; /* White text color */
            border: none;
            border-radius: 5px;
            cursor: pointer;
            background-color: #218838; /* Darker green on hover */
        }

        #Ly_do {
            height: 100px;
            width: 100%;
            border-radius: 5px;
            padding: 5px;
            margin-bottom: 5px;
            display: inline-block; /* Adjust this value as needed */
        }

        .custom-checkbox {
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            width: 20px;
            height: 20px;
            border: 2px solid #ccc;
            border-radius: 4px;
            outline: none;
            transition: border-color 0.3s ease;
        }

            /* Kiểu dáng khi checkbox được chọn */
            .custom-checkbox:checked {
                border-color: #2196F3;
                background-color: #2196F3;
                background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath d='M9 16.17L4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z' fill='%23ffffff'/%3E%3C/svg%3E");
                background-repeat: no-repeat;
                background-position: center;
            }

        #Nguoi_Nop_Tien {
            width: 100%;
            border-radius: 5px;
            padding: 5px;
            margin-bottom: 5px;
            display: inline-block; /* Adjust this value as needed */
        }

        .loader-container {
            position: fixed; /* Full screen */
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9); /* Semi-transparent white */
            z-index: 9999; /* Make sure it's on top */
            display: flex;
            justify-content: center;
            align-items: center;
        }

        #So_HD {
            width: 90px;
            text-align: right
        }

        #So_CT1 {
            width: 70px;
        }

        #Ngay_Den_Han, #Ngay_Hd {
            width: 100px
        }

        #Ma_Dt {
            width: 70px;
        }

        #Ten_Dt {
            width: 250px;
        }

        #Tien_1, #Tien_CKTT_1, #Tien_Phai_Thu_1 {
            width: 100px
        }
    </style>
</head>

<body>
    <section>
        <h1 class="text-center text-capitalize">Chỉnh Sửa Bảng Kê Nộp Tiền</h1>
        <div class="container">

            <form action="SaveHD" method="post">
                @*<form>*@
                @foreach (DataRow row2 in Model.Tables[0].Rows)
                {

                    DateTime ngayCt = (DateTime)row2["Ngay_Nop_Tien"];
                    string formattedNgayCt = ngayCt.ToString("dd/MM/yyyy");

                    <div class="form-group mb-3">
                        <div class="row">
                            <div class="col">
                                <p><strong>1. Ngày</strong>&nbsp;<span class="text-danger">*</span></p>
                                <input class="form-control" type="text" name="Ngay_Ct" id="Ngay_Ct" value="@formattedNgayCt" />
                            </div>
                            <div class="col">
                                @*  *@
                                <p><strong>2. SỐ</strong>&nbsp;<span class="text-danger">*</span></p><input class="form-control" type="text" required="" name="So_Ct" id="So_Ct" value="@row2["So_BK"]" >
                            </div>
                        </div>
                    </div>
                    <div class="form-group mb-3">
                        <p><strong>3. Trình Dược Viên&nbsp;</strong></p>
                    </div>
                    <input type="text" id="dropdownInput" list="dropdownList" placeholder="Tìm kiếm danh mục" value="@row2["Ma_TDV"]">


                    <datalist id="dropdownList">
                        @foreach (var item in ViewBag.DataTDV)
                        {
                            <option value="@item.Ma_TDV" data-ten="@item.Ten_TDV">@item.Ten_TDV</option>
                        }
                    </datalist>
                    <input name="Ten_NVGH" id="selectedOption" value="@row2["Ten_TDV"]" readonly>
                    <input name="Stt" id="Stt" value="@row2["Stt"]" readonly hidden>

                    <button type="button" id="LoadHd">Load Hóa đơn</button>
                    <br />
                    <div class="form-group mb-3">
                        <p><strong>4. Người Nộp Tiền&nbsp;</strong></p>
                    </div>
                    <input type="text" id="Nguoi_Nop_Tien" list="" placeholder="Người Nộp Tiền" name="Nguoi_Nop_Tien" value="@row2["Nguoi_Nop_Tien"]">
                    <div class="form-group mb-3">
                        <p><strong>5. Nội Dung&nbsp;</strong></p>
                    </div>
                    <input type="text" id="Ly_do" list="" placeholder="Nội Dung" name="Ly_do" value="@row2["Noi_Dung"]">
                }

                @*<datalist id="dropdownList">
                        @foreach (var item in ViewBag.DataItems)
                        {
                            <option value="@item.Ma_Dt" data-ten="@item.Ten_Dt" data-dvcs="@item.Dvcs">@item.Ten_Dt</option>
                        }
                    </datalist>*@

                @*<datalist id="dropdownList">
                        @foreach (var item in ViewBag.DataItems)
                        {
                            <option value="@item.Ma_Dt" data-ten="@item.Ten_Dt" data-dvcs="@item.Dvcs">@item.Ten_Dt</option>
                        }
                    </datalist>*@


                <br />
                <table id="example" class="table table-striped table-bordered">
                    <thead class="table-dark">
                        <tr>
                            <th></th>
                            <th>Số HD</th>
                            <th>Số CT</th>
                            <th>Ngày HD</th>
                            <th>Ngày Đến Hạn</th>
                            <th>Biên lai TT</th>
                            <th>Mã KH</th>
                            <th>Khách hàng</th>
                            <th>Tiền HD</th>
                            <th>Tiền CKTT</th>
                            <th>Tiền Phải Thu</th>
                            <th>Tiền Còn Lại</th>
                            <th hidden></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (DataRow row2 in Model.Tables[1].Rows)
                        {
                            <tr>
                                <td >
                                    <input type="checkbox" id="myCheckbox" name="myCheckbox" class="custom-checkbox" onchange="handleCheckboxChange(event)" checked>
                                    @*<label for="myCheckbox">Label cho Checkbox</label>*@
                                </td>
                                <td>
                                    <input type="text" name="So_HD" id="So_HD" class="So_HD" list="dropdownListVT" placeholder="Tìm kiếm Hóa Đơn" value="@row2["So_Hd"]">
                                    <datalist id="dropdownListVT">
                                        @foreach (var item in ViewBag.DataHD)
                                        {
                                            <option value="@item.So_HD" data-ten="@item.Ten_Dt" data-NgayHD="@item.Ngay_Nop_Tien" data-MaDt="@item.Ma_Dt" data-So_CT1="@item.So_BK" data - tien="@item.Tien_HD" data-tiencktt="@item.Tien_CKTT" data-tienthue="@item.Thue" data-tientt="@item.Tien_Truoc_Thue" @*data - tienPT = "@item.Tien_Phai_Thu" *@> @item.Ten_Dt </option>
                                        }
                                    </datalist>
                                    <div id="error-messages-1"></div>
                                </td>
                                <td > <input name="So_CT1" id="So_CT1" class="So_CT1" value="@row2["So_CT1"]" readonly></td>
                                <td > <input name="Ngay_Hd" id="Ngay_Hd" class="Ngay_Hd" value="@row2["Ngay_Hd"]" readonly></td>
                                <td > <input name="Ngay_Den_Han" id="Ngay_Den_Han" class="Ngay_Den_Han" value="@row2["Ngay_Den_Han"]" readonly></td>
                                <td ><input name="Bien_Lai" id="Bien_Lai" class="Bien_Lai" value="@row2["Bien_Lai"]" /></td>
                                <td > <input name="Ma_Dt" id="Ma_Dt" class="Ma_Dt" readonly value="@row2["Ma_Dt"]"></td>
                                <td > <input name="Ten_Dt" id="Ten_Dt" class="Ten_Dt" readonly value="@row2["Ten_Dt"]"></td>
                                <td hidden><input type="text" name="Tien" class="Tien" id="Tien" value="@row2["Tien_HD"]" oninput="calculateRow(this)" /></td>
                                <td hidden><input type="text" name="Thue" class="Thue" id="Thue" value="@row2["Thue"]" /></td>
                                <td hidden><input type="text" name="Tien_Truoc_Thue" class="Tien_Truoc_Thue" value="@row2["Tien_Truoc_Thue"]" id="Tien_Truoc_Thue" /></td>
                                <td hidden><input type="text" name="Tien_CKTT" class="Tien_CKTT" value="@row2["Tien_CKTT"]" id="Tien_CKTT" oninput="calculateRow(this)" /></td>
                                <td hidden><input type="text" name="Tien_Phai_Thu" class="Tien_Phai_Thu" value="@row2["Tien_Phai_Thu"]" id="Tien_Phai_Thu" /></td>
                                <td hidden><input type="text" name="Tien_Con_Lai" class="Tien_Con_Lai" value="@row2["Tien_Con_Lai"]" id="Tien_Con_Lai" /></td>
                                <td ><input style="text-align:right" type="text" name="Tien_1" class="Tien_1" id="Tien_1" value="@String.Format("{0:n0}", Convert.ToDecimal(row2["Tien_HD"])).Replace(",", ".")" oninput="calculateRow(this)" readonly /></td>
                                <td ><input style="text-align:right" type="text" name="Tien_CKTT_1" class="Tien_CKTT_1" id="Tien_CKTT_1" value="@String.Format("{0:n0}", Convert.ToDecimal(row2["Tien_CKTT"])).Replace(",", ".")" /></td>
                                <td ><input style="text-align:right" type="text" name="Tien_Phai_Thu_1" class="Tien_Phai_Thu_1" id="Tien_Phai_Thu_1" value="@String.Format("{0:n0}", Convert.ToDecimal(row2["Tien_Phai_Thu"])).Replace(",", ".")" /></td>
                                <td ><input type="text" name="Tien_Con_Lai_1" class="Tien_Con_Lai_1" id="Tien_Con_Lai_1" value="@String.Format("{0:n0}", Convert.ToDecimal(row2["Tien_Con_Lai"])).Replace(",", ".")" readonly /></td>

                                @*<td> <input name="Noi_Dung" class="Noi_Dung" id="Noi_Dung"></td>

                                    <td> <input type="checkbox" class="Check_GH" name="Check_GH" id="Check_GH" value="1"></td>*@
                                <td hidden></td>
                                <td ><button class="deleteRowBtn">Xóa</button></td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        @foreach (DataRow row2 in Model.Tables[0].Rows)
                        {
                            <tr style="background-color:burlywood">
                                <td colspan="10" style="text-align:right">Tổng Cộng:</td>
                                <td id="tien_hang2" style="text-align:right">@string.Format("{0:n0}", row2["Tong_Tien"]).Replace(",", ".")</td>
                                <td hidden id="tien_hang"></td>
                                <td></td>
                                <td></td>
                            </tr>
                        }
                    </tfoot>

                </table>
                <button type="button" >Thêm dòng</button>
                @*<button class="submit" type="button" id="SaveHD">Lưu</button>*@


            </form>


        </div>
        <div id="loader" class="loader-container" style="display: none;">
            <div class="spinner"></div>

        </div>
    </section>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/assets/bootstrap/js/bootstrap.min.js"></script>
    <script src="/assets/js/Application-Form-1.js"></script>
    <script src="/assets/js/Application-Form.js"></script>
    @*</ng-><script src="/assets/js/script.js"></script>*@

    <script>
        document.getElementById("dropdownInput").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownList option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOption").value = options[i].getAttribute("data-ten");
                    break;
                }
            }
        });





        document.addEventListener("DOMContentLoaded", function () {
            saveTableRows();
        
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInput");
                    var selectedOption = document.querySelector("#dropdownList option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.text.toString();

                        var selectedDvcs = selectedOption.getAttribute('data-Dvcs');

                        document.cookie = 'Ten_Dt= ' + encodeURIComponent(tenDt);

                        document.cookie = 'Dvcs=' + selectedDvcs;

                    }
                });
            }
        });

        /* danh muc vat tu*/

        document.getElementById("So_HD").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownListVT option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("Ngay_Hd").value = options[i].getAttribute("data-NgayHD");
                    document.getElementById("Ngay_Den_Han").value = options[i].getAttribute("data-NgayDenHan");
                    document.getElementById("Ma_Dt").value = options[i].getAttribute("data-MaDt");
                    document.getElementById("Ten_Dt").value = options[i].getAttribute("data-ten");
                    document.getElementById("So_CT1").value = options[i].getAttribute("data-So_CT1");
                    document.getElementById("Tien").value = options[i].getAttribute("data-tien");
                    document.getElementById("Tien_CKTT").value = options[i].getAttribute("data-tiencktt");
                    document.getElementById("Thue").value = options[i].getAttribute("data-tienthue");
                    document.getElementById("Tien_Truoc_Thue").value = options[i].getAttribute("data-tientt");

                    break;
                }
            }
        });

        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInput");
                    var selectedOption = document.querySelector("#dropdownList option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var Ten_Vt = selectedOption.text.toString();


                        document.cookie = 'Ten_Vt= ' + encodeURIComponent(Ten_Vt);



                    }
                });
            }
        });

    </script>
    <script>
        // Lấy đối tượng URLSearchParams từ đường dẫn URL
        const urlParams = new URLSearchParams(window.location.search);

        // Lấy giá trị của tham số 'Ngay_Ct'
        let ngayCtValue = urlParams.get('Ngay_Ct');

        function formatNgayCtValue(value) {
            const regex = /^(\d{4})-(\d{2})-(\d{2})$/; // Biểu thức chính quy mới
            const match = value.match(regex);
            if (match) {
                const year = match[1];
                const month = match[2];
                const day = match[3];
                return `${day}/${month}/${year}`;
            }
            return value;
        }
        // Định dạng giá trị của Ngay_Ct
        ngayCtValue = formatNgayCtValue(ngayCtValue);

        // Lấy checkbox
        const checkbox = document.getElementById('myCheckbox');

        // Thêm sự kiện change cho checkbox
        checkbox.addEventListener('change', handleCheckboxChange);

        function handleCheckboxChange(event) {
            const checkbox = event.target;
            const row = checkbox.closest('tr');
            const isChecked = checkbox.checked;

            saveTienPhaiThuToSession();
            // Lấy ô "Tiền CKTT" trong dòng tương ứng
            const tienCKTTInput = row.querySelector('.Tien_CKTT');
            saveTienTruocThueSession();
            if (isChecked) {
                const ngayCtInput = document.getElementById('Ngay_Ct');
                const ngayCtValue = parseDate(ngayCtInput.value);

                // Lấy giá trị ngày từ cột "Ngày HD"
                const ngayHdInput = row.querySelector('.Ngay_Den_Han').value;

                const ngayHdValue = parseDate(ngayHdInput);
                if (ngayCtValue > ngayHdValue) {
                    tienCKTTInput.value = '0';
                } else {
                    /*   tienCKTTInput.value = row.querySelector('.Tien_CKTT');*/
                }
                calculateRow(row);
                updateTienConLaiValues();
                saveTableRowDeleteFirstRow();
            } else {
                if (tienCKTTInput.dataset.tienCKTTGoc !== undefined) {
                    tienCKTTInput.value = row.querySelector('.Tien_CKTT');

                }
            }

        }
        function formatCurrency(value) {
            return parseFloat(value).toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
        }

        function parseDate(dateStr) {
            const [day, month, year] = dateStr.split('/');
            return new Date(`${year}-${month}-${day}`);
        }

    </script>
    <script>
        $(document).ready(function () {


            function addDuplicateWarning(row, message) {
                var warningRow = '<tr class="duplicate-warning"><td colspan="10" style="color: red; text-align: center;">' + message + '</td></tr>';
                $(row).after(warningRow);
            }
            function convertNetDate(netDate) {
                var date = new Date(parseInt(netDate.substr(6)));
                var day = ("0" + date.getDate()).slice(-2);
                var month = ("0" + (date.getMonth() + 1)).slice(-2);
                var year = date.getFullYear();
                return day + '/' + month + '/' + year;
            }


        // Function to repopulate dropdownListVT
            function populateDropdownListVT() {
                var dropdownListVT = $('#dropdownListVT');
                dropdownListVT.empty();

                var dataItems2 = @Html.Raw(Json.Encode(ViewBag.DataHD));
                dataItems2.forEach(function (item) {
                    var readableDate = convertNetDate(item.Ngay_HD); // Convert the date

                    var option = $('<option>')
                        .val(item.So_HD)
                        .attr('data-So_CT1', item.So_CT1)
                        .attr('data-NgayHD', item.Ngay_HD)
                        .attr('data-NgayDenHan', item.Ngay_Den_Han)
                        .attr('data-MaDt', item.Ma_Dt)
                        .attr('data-ten', item.Ten_Dt)
                        .attr('data-tien', item.Tien_HD)
                        .attr('data-tiencktt', item.Tien_CKTT)
                        .attr('data-tienthue', item.Thue)
                        .attr('data-tientt', item.Tien_Truoc_Thue)
                        .text(item.Ten_Dt);
                    dropdownListVT.append(option);
                });
            }
            var rowCount = 1;
            $('#addRowBtn').click(function () {
                var currentValues = [];
                $('#example tbody tr').each(function () {
                    currentValues.push($(this).find('input[name="Tien_Con_Lai"]').val());
                });
                rowCount++;
                var newRow = `<tr>
                    <td>
                      <input type="checkbox" id="myCheckbox" name="myCheckbox"class="custom-checkbox"onchange="handleCheckboxChange(event)">

                    </td>
                      <td>
                        <input style="text-align:center"type="text" name="So_HD" id="So_HD" class="So_HD" list="dropdownListVT" placeholder="Tìm kiếm Hóa Đơn">
                      <datalist id="dropdownListVT">
                                        @foreach (var item in ViewBag.DataHD)
                                        {
                                            <option value="@item.So_HD" data-ten="@item.Ten_Dt" data-NgayHD="@item.Ngay_Nop_Tien" data-MaDt="@item.Ma_Dt" data-So_CT1="@item.So_BK" data-tien="@item.Tien_HD" data-tiencktt="@item.Tien_CKTT">@item.Ten_Dt</option>
                                        }
                                    </datalist>
                      <div id="error-messages-${rowCount}"></div>
                      </td>
                      <td> <input style="text-align:center"name="So_CT1" id="So_CT1" class="So_CT1" readonly></td>
                      <td> <input name="Ngay_Hd" id="Ngay_Hd" class="Ngay_Hd" readonly></td>
                      <td> <input name="Ngay_Den_Han" id="Ngay_Den_Han" class="Ngay_Den_Han" readonly></td>
                      <td><input name="Bien_Lai" id="Bien_Lai" class="Bien_Lai"></td>
                      <td> <input style="text-align:right" name="Ma_Dt" id="Ma_Dt" class="Ma_Dt" readonly></td>
                      <td> <input name="Ten_Dt" id="Ten_Dt" class="Ten_Dt" readonly></td>
                      <td hidden><input style="text-align:right"type="text" name="Tien" id="Tien" class="Tien" oninput="calculateRow(this)" /></td>
                       <td hidden><input type="text" name="Thue" class="Thue" id="Thue"/></td>
                            <td hidden><input type="text" name="Tien_Truoc_Thue" class="Tien_Truoc_Thue" id="Tien_Truoc_Thue"/></td>
                        <td hidden><input style="text-align:right" type="text" name="Tien_Con_Lai" id="Tien_Con_Lai" class="Tien_Con_Lai" /></td>

                    <td  hidden><input style="text-align:right"type="text" name="Tien_CKTT" id="Tien_CKTT" class="Tien_CKTT" oninput="calculateRow(this)"/></td>
                    <td hidden><input style="text-align:right" type="text" name="Tien_Phai_Thu" id="Tien_Phai_Thu" class="Tien_Phai_Thu"   /></td>

                     <td><input style="text-align:right"type="text" name="Tien_1" id="Tien_1" class="Tien" oninput="calculateRow(this)" /></td>
                    <td><input style="text-align:right"type="text" name="Tien_CKTT_1" id="Tien_CKTT_1" class="Tien_CKTT" /></td>
                    <td><input style="text-align:right" type="text" name="Tien_Phai_Thu_1" id="Tien_Phai_Thu_1" class="Tien_Phai_Thu_1"   /></td>
            <td><input style="text-align:right" type="text" name="Tien_Con_Lai_1" id="Tien_Con_Lai_1" class="Tien_Con_Lai_1" readonly /></td>

                    <td><button type="button" class="deleteRowBtn"onclick="deleteRow(this)">Xóa</button></td>
                    </tr>`;
                $('#example tbody').append(newRow);
                populateDropdownListVT();
                $('#example tbody tr').each(function (index) {
                    $(this).find('input[name="Tien_Con_Lai"]').val(currentValues[index]);
                });

            });
        $(document).on('input', '.So_HD', function () {
            var inputValue = $(this).val();
            var So_CT1 = $(this).closest('tr').find('.So_CT1');
            var Ngay_Hd = $(this).closest('tr').find('.Ngay_Hd');
            var Ngay_Den_Han = $(this).closest('tr').find('.Ngay_Den_Han');
            var Ma_Dt = $(this).closest('tr').find('.Ma_Dt');
            var Ten_Dt = $(this).closest('tr').find('.Ten_Dt');
            var NV_GN = $(this).closest('tr').find('.NV_GN');
            var Tien = $(this).closest('tr').find('.Tien');
            var Thue = $(this).closest('tr').find('.Thue');
            var Tien_Truoc_Thue = $(this).closest('tr').find('.Tien_Truoc_Thue');
            var Tien_CKTT = $(this).closest('tr').find('.Tien_CKTT');
            // Find the corresponding option in dropdownListVT
            var option = $('#dropdownListVT option[value="' + inputValue + '"]');

            if (option.length > 0) {
                // Update the Ten_vt input with the data-ten attribute of the selected option
                Ngay_Hd.val(option.attr('data-NgayHD'));
                Ngay_Den_Han.val(option.attr('data-NgayDenHan'));
                Ma_Dt.val(option.attr('data-MaDt'));
                Ten_Dt.val(option.attr('data-ten'));
                So_CT1.val(option.attr('data-So_CT1'));
                Tien.val(option.attr('data-tien'));
                Tien_CKTT.val(option.attr('data-tiencktt'));
                Thue.val(option.attr('data-tienthue'));
                Tien_Truoc_Thue.val(option.attr('data-tientt'));
            } else {
                Ngay_Hd.val('');
            }
            $('.So_HD').next('div').text('');
            checkDuplicateSoHD();
        });

        $(document).on('click', '.deleteRowBtn', function () {
            $(this).closest('tr').remove();

            // Call the function to recreate the dropdownListVT after deleting a row
            populateDropdownListVT();
        });

    });


        function SaveHD(data) {
            return $.ajax({
                contentType: 'application/json; charset=utf-8',
                dataType: 'json',
                type: 'POST',
                url: "/FormBKNopTien/SaveUpdate",
                data: data,
                success: function (result) {
                    alert(result);
                   window.location.href = '/FormBKNopTien/Index1';

                 console.log(data);
                },
                error: function () {
                    alert("Error!");

                }
            });
        }
        //Collect Multiple Order List For Pass To Controller
        $("#SaveHD").click(function (e) {
            e.preventDefault();

            var orderArr = [];
            orderArr.length = 0;
            var soct;
            soct = $(this).find('input[name="So_Ct"]').val();

            $("#example tbody tr:gt(0)").each(function () {
                var soHD = $(this).find('input[name="So_HD"]').val();
                var NgayHD = $(this).find('input[name="Ngay_Hd"]').val();
                var NgayDenHan = $(this).find('input[name="Ngay_Den_Han"]').val();
                var BienLai = $(this).find('input[name="Bien_Lai"]').val() || " ";
                var MaDt = $(this).find('input[name="Ma_Dt"]').val();
                var TenDt = $(this).find('input[name="Ten_Dt"]').val();
                var Tien = $(this).find('input[name="Tien"]').val();
                var Tien_TT = $(this).find('input[name="Tien_Truoc_Thue"]').val();
                var Tien_CKTT = $(this).find('input[name="Tien_CKTT"]').val();
                var Thue = $(this).find('input[name="Thue"]').val();
                var Tien_Phai_Thu = $(this).find('input[name="Tien_Phai_Thu"]').val();
                var Tien_Con_Lai = $(this).find('input[name="Tien_Con_Lai"]').val();
                var So_CT1 = $(this).find('input[name="So_CT1"]').val();
                orderArr.push({
                    So_Hd: soHD,
                    Ngay_HD: NgayHD,
                    Ngay_Den_Han: NgayDenHan,
                    Bien_Lai: BienLai,
                    Ma_Dt: MaDt,
                    Ten_Dt: TenDt,
                    Tien_HD: Tien,
                    Tien_Truoc_Thue: Tien_TT,
                    Tien_CKTT: Tien_CKTT,
                    Thue: Thue,
                    Tien_Phai_Thu: Tien_Phai_Thu,
                    Tien_Con_Lai: Tien_Con_Lai,
                    So_CT: So_CT1
                });

            });
            var ngayNopTien = $("#Ngay_Ct").val();
            var formattedNgayNopTien = convertDateFormat(ngayNopTien);
            //var tenVt = $(this).find('input[name="Ten_Vt"]').val();
            //var hanMuc = $(this).find('input[name="Han_Muc"]').val();
            var data = JSON.stringify({
                Ngay_Nop_Tien: formattedNgayNopTien,
                So_BK: $("#So_Ct").val(),
                Ma_TDV: $("#dropdownInput").val(),
                Ten_TDV: $("#selectedOption").val(),
                Noi_Dung: $("#Ly_do").val(),
                Tong_Tien: $("#tien_hang").val(),
                Stt: $("#Stt").val(),

                details: orderArr
            });
            console.log("data", data);
            $.when(SaveHD(data)).then(function (response) {
                console.log(response);
            }).fail(function (err) {
                console.log(err);
            });
        });
        function checkDuplicateSoHD() {
            var soHDValues = {};
            $('.So_HD').each(function () {
                var value = $(this).val();
                if (soHDValues[value]) {
                    $(this).next('div').text('Số hóa đơn này đã tồn tại');
                    $(this).addClass('error');
                } else {
                    $(this).next('div').text('');
                    $(this).removeClass('error');
                    soHDValues[value] = true;
                }
            });
        }


        document.getElementById('LoadHd').addEventListener('click', function () {
            document.getElementById('loader').style.display = 'flex'; // Show the loader

            var ngayCt = document.getElementById('Ngay_Ct').value;
            var soCt = document.getElementById('So_Ct').value;
            var maNVGH = document.getElementById('dropdownInput').value;
            var tenNVGH = document.getElementById('selectedOption').value;
            var ghichu = document.getElementById('Ly_do').value;
            var ngNopTien = document.getElementById('Nguoi_Nop_Tien').value;
            // Set the cookie for Ma_NVGH
            setCookie('Ma_CbNv', maNVGH, 7);
            setCookie('Ten_NVGH', tenNVGH, 7);// The cookie will expire in 7 days

            var queryParams = 'Ngay_Ct=' + encodeURIComponent(ngayCt) +
                '&So_Ct=' + encodeURIComponent(soCt) +
                '&Ma_NVGH=' + encodeURIComponent(maNVGH) +
                '&Ly_Do=' + encodeURIComponent(ghichu) +
                '&Ten_NVGH=' + encodeURIComponent(tenNVGH)+
            '&Nguoi_Nop_Tien=' + encodeURIComponent(ngNopTien);
            // Redirect or submit form after a short delay
            setTimeout(function () {
                window.location.href = 'UpdateBangKeLoadHd1?' + queryParams;
            }, 1000); // Adjust the time as needed
        });

        function setCookie(name, value, days) {
            var expires = "";
            if (days) {
                var date = new Date();
                date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                expires = "; expires=" + date.toUTCString();
            }
            document.cookie = name + "=" + (value || "") + expires + "; path=/";
        }
        function convertDateFormat(dateString) {
            var parts = dateString.split("/");
            return `${parts[2]}/${parts[1]}/${parts[0]}`;
        }
    </script>
    <script>
        $(document).ready(function () {
            function calculateTotal() {
                let tienHang = 0;
                let tienPhaiThuValues = [];
                document.querySelectorAll('#example tbody tr').forEach(row => {
                    const tienPhaiThuInput = row.querySelector('input[name="Tien_Phai_Thu"]');
                    if (tienPhaiThuInput) {
                        const tienPhaiThu = parseFloat(tienPhaiThuInput.value) || 0;
                        tienHang += tienPhaiThu;
                        tienPhaiThuValues.push(tienPhaiThu);
                    }
                });
                const formattedTienHang = tienHang.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
                document.getElementById('tien_hang').textContent = tienHang.toFixed(2);
                document.getElementById('tien_hang2').textContent = formattedTienHang;
            }

            function saveTableRows() {
                let existingRows = sessionStorage.getItem('tableRows');
                existingRows = existingRows ? JSON.parse(existingRows) : [];

                let newRows = [];
                $("#example tbody tr").each(function () {
                    let row = {};
                    let isEmptyRow = true;

                    $(this).find('input, textarea').each(function () {
                        let type = $(this).attr('type');
                        if (type === 'checkbox') {
                            row[$(this).attr('name')] = $(this).prop('checked');
                            isEmptyRow = isEmptyRow && !$(this).prop('checked');
                        } else {
                            row[$(this).attr('name')] = $(this).val();
                            if ($(this).val() !== '') {
                                isEmptyRow = false;
                            }
                        }
                    });

                    if (!isEmptyRow) {
                        newRows.push(row);
                    }
                });

                const mergedRows = [...existingRows, ...newRows];
                sessionStorage.setItem('tableRows', JSON.stringify(mergedRows));
                saveTienPhaiThuToSession();
            }
            function formatCurrency1(num) {
                if (!num) return '0';

                // Convert to decimal
                num = parseFloat(num);

                // Format the number with commas as thousand separators
                let formattedNum = num.toLocaleString('de-DE');

                // Replace commas with dots
                formattedNum = formattedNum.replace(/,/g, '.');

                return formattedNum;
            }


            function loadTableRows() {
                var tableRows = JSON.parse(sessionStorage.getItem('tableRows'));
                var tienPhaiThuValues = JSON.parse(sessionStorage.getItem('tienPhaiThuValues')) || [];
                if (tableRows) {
                    tableRows.forEach(function (row, index) {
                        if (row['So_HD']) {
                            var newRow = '<tr>';
                            newRow += '<td><input type="checkbox" name="myCheckbox" class="custom-checkbox" ' + (row['myCheckbox'] ? 'checked' : '') + '></td>';
                            newRow += '<td><input style="text-align:center" type="text" id="So_HD" name="So_HD" value="' + (row['So_HD'] || '') + '"></td>';
                            newRow += '<td><input style="text-align:center" class="So_CT1"type="text" name="So_CT1" value="' + (row['So_CT1'] || '') + '" readonly></td>';
                            newRow += '<td><input type="text" name="Ngay_Hd"class="Ngay_Hd" value="' + (row['Ngay_Hd'] || '') + '" readonly></td>';
                            newRow += '<td><input type="text" name="Ngay_Den_Han" class="Ngay_Den_Han" value="' + (row['Ngay_Den_Han'] || '') + '" readonly></td>';
                            newRow += '<td><input name="Bien_Lai" id="Bien_Lai" class="Bien_Lai" value="' + (row['Bien_Lai'] || '') + '"></td>';
                            newRow += '<td><input style="text-align:right" class="Ma_Dt" type="text" name="Ma_Dt" value="' + (row['Ma_Dt'] || '') + '" readonly></td>';
                            newRow += '<td><input type="text" name="Ten_Dt"class="Ten_Dt" value="' + (row['Ten_Dt'] || '') + '" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien" name="Tien" value="' + (row['Tien'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_Truoc_Thue" name="Tien_Truoc_Thue" value="' + (row['Tien_Truoc_Thue'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Thue" name="Thue" value="' + (row['Thue'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_CKTT" name="Tien_CKTT" value="' + (row["Tien_CKTT"] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_Phai_Thu" name="Tien_Phai_Thu" value="' + (tienPhaiThuValues[index] || 0) + '"></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_Con_Lai" name="Tien_Con_Lai"></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_1" name="Tien_1" value="' + formatCurrency1(row['Tien'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_CKTT_1" name="Tien_CKTT_1" value="' + formatCurrency1(row["Tien_CKTT"] || '') + '"></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_Phai_Thu_1" name="Tien_Phai_Thu_1" value="' + formatCurrency1(tienPhaiThuValues[index] || 0) + '" oninput="calculateRow(this))"></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_Con_Lai_1" name="Tien_Con_Lai_1" value="' + formatCurrency1(row["Tien_Con_Lai"] || '') + '" readonly></td>';
                            newRow += '<td><button type="button" class="deleteRowBtn">Xóa</button></td>';
                            newRow += '</tr>';
                            $('#example tbody').append(newRow);
                        }
                    });
                }
            }

          /*  loadTableRows();*/
            function saveTienPhaiThuToSession() {
                let tienPhaiThuValues = [];
                document.querySelectorAll('#example tbody tr').forEach(row => {
                    const tienPhaiThuInput = row.querySelector('input[name="Tien_Phai_Thu"]');
                    if (tienPhaiThuInput) {
                        const value = tienPhaiThuInput.value.trim();
                        const tienPhaiThu = parseFloat(value);
                        if (!isNaN(tienPhaiThu)) {
                            tienPhaiThuValues.push(tienPhaiThu);
                        }
                    }
                });
                sessionStorage.setItem('tienPhaiThuValues', JSON.stringify(tienPhaiThuValues));
            }

            // Hàm tính toán lại giá trị tiền còn lại
            function calculateTienConLai(inputElement) {
                const row = inputElement.closest('tr');
                const TienHD = parseFloat(row.querySelector('input[name="Tien"]').value) || 0;
                const TienCKTT = parseFloat(row.querySelector('input[name="Tien_CKTT"]').value) || 0;
                const TienPhaiThu = parseFloat(row.querySelector('input[name="Tien_Phai_Thu"]').value) || 0;

                const TienConLai = TienHD - TienCKTT- TienPhaiThu ;

                row.querySelector('input[name="Tien_Con_Lai"]').value = TienConLai.toFixed(2);
            }

            // Gọi hàm tính toán khi có thay đổi giá trị
            document.querySelectorAll('#example tbody tr input').forEach(input => {
                input.addEventListener('input', () => {
                    calculateTienConLai(input);
                });
            });

           

       /*     document.getElementById("saveButton").addEventListener("click", saveTableRows);*/
        /*    window.addEventListener('load', loadTableRows);*/
            window.addEventListener('load', calculateTotal);
        });
        $('#example tbody').on('keypress', 'input[name="Tien_Phai_Thu_1"]', function (e) {
            function formatCurrency1(num) {
                if (!num) return '0';

                // Convert to decimal
                num = parseFloat(num);

                // Format the number with commas as thousand separators
                let formattedNum = num.toLocaleString('de-DE');

                // Replace commas with dots
                formattedNum = formattedNum.replace(/,/g, '.');

                return formattedNum;
            }


            function loadTableRows() {
                var tableRows = JSON.parse(sessionStorage.getItem('tableRows'));
                var tienPhaiThuValues = JSON.parse(sessionStorage.getItem('tienPhaiThuValues')) || [];
                if (tableRows) {
                    tableRows.forEach(function (row, index) {
                        if (row['So_HD']) {
                            var newRow = '<tr>';
                            newRow += '<td><input type="checkbox" name="myCheckbox" class="custom-checkbox" ' + (row['myCheckbox'] ? 'checked' : '') + '></td>';
                            newRow += '<td><input style="text-align:center" type="text" id="So_HD" name="So_HD" value="' + (row['So_HD'] || '') + '"></td>';
                            newRow += '<td><input style="text-align:center" class="So_CT1"type="text" name="So_CT1" value="' + (row['So_CT1'] || '') + '" readonly></td>';
                            newRow += '<td><input type="text" name="Ngay_Hd"class="Ngay_Hd" value="' + (row['Ngay_Hd'] || '') + '" readonly></td>';
                            newRow += '<td><input type="text" name="Ngay_Den_Han" class="Ngay_Den_Han" value="' + (row['Ngay_Den_Han'] || '') + '" readonly></td>';
                            newRow += '<td><input name="Bien_Lai" id="Bien_Lai" class="Bien_Lai" value="' + (row['Bien_Lai'] || '') + '"></td>';
                            newRow += '<td><input style="text-align:right" class="Ma_Dt" type="text" name="Ma_Dt" value="' + (row['Ma_Dt'] || '') + '" readonly></td>';
                            newRow += '<td><input type="text" name="Ten_Dt"class="Ten_Dt" value="' + (row['Ten_Dt'] || '') + '" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien" name="Tien" value="' + (row['Tien'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_Truoc_Thue" name="Tien_Truoc_Thue" value="' + (row['Tien_Truoc_Thue'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Thue" name="Thue" value="' + (row['Thue'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_CKTT" name="Tien_CKTT" value="' + (row["Tien_CKTT"] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_Phai_Thu" name="Tien_Phai_Thu" value="' + (tienPhaiThuValues[index] || 0) + '"></td>';
                            newRow += '<td hidden><input style="text-align:right" type="text" id="Tien_Con_Lai" name="Tien_Con_Lai"></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_1" name="Tien_1" value="' + formatCurrency1(row['Tien'] || '') + '" oninput="calculateRow(this)" readonly></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_CKTT_1" name="Tien_CKTT_1" value="' + formatCurrency1(row["Tien_CKTT"] || '') + '"></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_Phai_Thu_1" name="Tien_Phai_Thu_1" value="' + formatCurrency1(tienPhaiThuValues[index] || 0) + '" oninput="calculateRow(this))"></td>';
                            newRow += '<td><input style="text-align:right" type="text" id="Tien_Con_Lai_1" name="Tien_Con_Lai_1" value="' + formatCurrency1(row["Tien_Con_Lai"] || '') + '" readonly></td>';
                            newRow += '<td><button type="button" class="deleteRowBtn">Xóa</button></td>';
                            newRow += '</tr>';
                            $('#example tbody').append(newRow);
                        }
                    });
                }
            }
            if (e.which == 13) { // 13 là mã phím Enter
                // Tick lại checkbox
                const checkbox = $(this).closest('tr').find('input[name="myCheckbox"]');
                checkbox.prop('checked', true);
                const row = $(this).closest('tr');
                const newTienPhaiThu = parseFloat($(this).val().replace(/,/g, '')) || 0;
                row.find('input[name="Tien_Phai_Thu"]').val(newTienPhaiThu);
                // Tính toán lại giá trị tiền phải thu
                /* calculateRow(this);*/
                calculateTienConLai(this);
                calculateTotal();
               /* loadTableRows();*/
                //saveTableRows();
                //populateDropdownListVTAg();
            }
        });
    </script>
    <script>
        function saveTableRows() {
            let existingRows = sessionStorage.getItem('tableRows');
            existingRows = existingRows ? JSON.parse(existingRows) : [];

            let newRows = [];
            $("#example tbody tr").each(function () {
                let row = {};
                let isEmptyRow = true;

                $(this).find('input, textarea').each(function () {
                    let type = $(this).attr('type');
                    if (type === 'checkbox') {
                        row[$(this).attr('name')] = $(this).prop('checked');
                        isEmptyRow = isEmptyRow && !$(this).prop('checked');
                    } else {
                        row[$(this).attr('name')] = $(this).val();
                        if ($(this).val() !== '') {
                            isEmptyRow = false;
                        }
                    }
                });

                if (!isEmptyRow) {
                    newRows.push(row);
                }
            });

            const mergedRows = [...existingRows, ...newRows];
            sessionStorage.setItem('tableRows', JSON.stringify(mergedRows));
            saveTienPhaiThuToSession();
            saveTienConLaiToSession();
        }
        function saveTienPhaiThuToSession() {
            let tienPhaiThuValues = [];

            document.querySelectorAll('#example tbody tr').forEach(row => {
                const tienPhaiThuInput = row.querySelector('input[name="Tien_Phai_Thu"]');
                if (tienPhaiThuInput) {
                    const value = tienPhaiThuInput.value.trim();
                    const tienPhaiThu = parseFloat(value);
                    if (!isNaN(tienPhaiThu)) {
                        tienPhaiThuValues.push(tienPhaiThu);
                    }
                }
            });

            // Lưu các giá trị "Tien_Phai_Thu" vào sessionStorage
            sessionStorage.setItem('tienPhaiThuValues', JSON.stringify(tienPhaiThuValues));
        }
        function updateTienPhaiThuValues() {//khong dung den
            let index = 0;
            document.querySelectorAll('#example tbody tr').forEach(row => {
                const tienPhaiThuInput = row.querySelector('input[name="Tien_Phai_Thu"]');
                if (tienPhaiThuInput) {
                    tienPhaiThuInput.value = tienPhaiThuValues[index] || 0;
                    index++;
                }
            });
        }
        function saveTienTruocThueSession() {
            let tienTruocThueValues = [];

            document.querySelectorAll('#example tbody tr').forEach(row => {
                const tienTruocThueInput = row.querySelector('input[name="Tien_Truoc_Thue"]');
                if (tienTruocThueInput) {
                    const tienTruocThue = parseFloat(tienTruocThueInput.value) || 0;
                    tienTruocThueValues.push(tienTruocThue);
                }
            });

            // Lưu các giá trị "Tien_Phai_Thu" vào sessionStorage
            sessionStorage.setItem('tienTruocThueValues', JSON.stringify(tienTruocThueValues));

            // Console log để xác nhận lưu trữ thành công

        }
        function calculateRow(inputElement) {

            const row = inputElement.closest('tr');
            const soLuong = parseFloat(row.querySelector('#Tien').value) || 0;
            const donGia = parseFloat(row.querySelector('#Tien_CKTT').value) || 0;
            const thanhTien = soLuong - donGia;
            const formattedTienPhaiThu = thanhTien.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
            const formattedTienHD = soLuong.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
            const formattedTienCKTT = donGia.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });

            row.querySelector('#Tien_Phai_Thu_1').value = formattedTienPhaiThu;
            row.querySelector('#Tien_Phai_Thu').value = thanhTien.toFixed(0);
            row.querySelector('#Tien_1').value = formattedTienHD;
            row.querySelector('#Tien_CKTT_1').value = formattedTienCKTT;

            calculateTotal();
        }
        function calculateTotal() {
            let tienHang = 0;
            let tienPhaiThuValues = [];
            document.querySelectorAll('#example tbody tr').forEach(row => {
                const tienPhaiThuInput = row.querySelector('input[name="Tien_Phai_Thu"]');
                if (tienPhaiThuInput) {
                    const tienPhaiThu = parseFloat(tienPhaiThuInput.value) || 0;
                    tienHang += tienPhaiThu;
                    tienPhaiThuValues.push(tienPhaiThu); // Thêm giá trị vào mảng
                }
            });
            const formattedTienHang = tienHang.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
            document.getElementById('tien_hang').textContent = tienHang.toFixed(2);
            document.getElementById('tien_hang2').textContent = formattedTienHang;
        }
        function updateTienConLaiValues() {
            let tableRows = JSON.parse(sessionStorage.getItem('tableRows')) || [];
            let tienConLaiValues = [];

            tableRows.forEach(row => {
                if (row.Tien_Con_Lai !== undefined) {
                    tienConLaiValues.push(parseFloat(row.Tien_Con_Lai) || 0);
                }
            });
            let index = 0;
            document.querySelectorAll('#example tbody tr').forEach(row => {
                const tienConLaiInput = row.querySelector('input[name="Tien_Con_Lai"]');
                if (tienConLaiInput) {
                    tienConLaiInput.value = tienConLaiValues[index] || 0;
                    index++;
                }
            });
            sessionStorage.setItem('tienConLaiValues', JSON.stringify(tienConLaiValues));
        }
        function saveTableRowDeleteFirstRow() {
            let existingRows = sessionStorage.getItem('tableRows');
            existingRows = existingRows ? JSON.parse(existingRows) : [];

            let newRows = [];
            $("#example tbody tr").each(function (index) {
                if (index === 0) {
                    return; // Bỏ qua dòng đầu tiên
                }

                let row = {};
                let isEmptyRow = true;

                $(this).find('input, textarea').each(function () {
                    let type = $(this).attr('type');
                    if (type === 'checkbox') {
                        row[$(this).attr('name')] = $(this).prop('checked');
                        isEmptyRow = isEmptyRow && !$(this).prop('checked');
                    } else {
                        row[$(this).attr('name')] = $(this).val();
                        if ($(this).val() !== '') {
                            isEmptyRow = false;
                        }
                    }
                });

                if (!isEmptyRow) {
                    newRows.push(row);
                }
            });

            const mergedRows = [...existingRows, ...newRows];
            sessionStorage.setItem('tableRows', JSON.stringify(mergedRows));
            saveTienPhaiThuToSession();
        }
       
        function saveTienConLaiToSession() {
            let tienConLaiValues = [];

            document.querySelectorAll('#example tbody tr').forEach(row => {
                const tienConLaiInput = row.querySelector('input[name="Tien_Con_Lai"]');
                if (tienConLaiInput) {
                    const value = tienConLaiInput.value.trim();
                    const tienConLai = parseFloat(value);
                    if (!isNaN(tienConLai)) {
                        tienConLaiValues.push(tienConLai);
                    } else {
                        tienConLaiValues.push(0); // Hoặc giá trị mặc định nếu không có giá trị hợp lệ
                    }
                }
            });
            sessionStorage.setItem('tienConLaiValues', JSON.stringify(tienConLaiValues));

        }
        function loadTienConLaiFromSession() {
            const tienConLaiValues = JSON.parse(sessionStorage.getItem('tienConLaiValues')) || [];
            document.querySelectorAll('#example tbody tr').forEach((row, index) => {
                const tienConLaiInput = row.querySelector('input[name="Tien_Con_Lai"]');
                if (tienConLaiInput && tienConLaiValues[index] !== undefined) {
                    tienConLaiInput.value = tienConLaiValues[index];
                }
            });
        }

        function calculateTienConLai(inputElement) {
            const row = inputElement.closest('tr');
            const TienHD = parseFloat(row.querySelector('input[name="Tien"]').value) || 0;
            const TienCKTT = parseFloat(row.querySelector('input[name="Tien_CKTT"]').value) || 0;
            const TienPT = parseFloat(row.querySelector('input[name="Tien_Phai_Thu"]').value) || 0;
            const TienConLai = TienHD - TienCKTT - TienPT;
            const formattedTienConLai = TienConLai.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
            row.querySelector('#Tien_Con_Lai_1').value = formattedTienConLai;
            row.querySelector('#Tien_Con_Lai').value = TienConLai.toFixed(0);
            console.log("Tien con lai la: ", TienConLai.toFixed(0));
           
        }
    </script>

    @*<script>
            $(document).ready(function () {
                calculateTotal();
                function saveTableRows() {
                    var tableRows = [];
                    $("#example tbody tr").each(function () {
                        var row = {};
                        $(this).find('input, textarea').each(function () {
                            var type = $(this).attr('type');
                            if (type === 'checkbox') {
                                row[$(this).attr('name')] = $(this).prop('checked');
                            } else {
                                row[$(this).attr('name')] = $(this).val();
                            }
                        });
                        tableRows.push(row);
                    });
                    sessionStorage.setItem('tableRows', JSON.stringify(tableRows));
                    saveTienPhaiThuToSession();
                }
                calculateTotal();
                $('#LoadHd').click(function () {
                    saveTableRows();
                    var ngayCt = document.getElementById('Ngay_Ct').value;
                    var soCt = document.getElementById('So_Ct').value;
                    var maNVGH = document.getElementById('dropdownInput').value;
                    var tenNVGH = document.getElementById('selectedOption').value;
                    var ghichu = document.getElementById('Ly_do').value;
                    var nguoiNopTien = document.getElementById('Nguoi_Nop_Tien').value;
                    var urlParams = new URLSearchParams(window.location.search);
                    var Stt = urlParams.get('Stt') || '';
                    setCookie('Ma_NVGH', maNVGH, 7);
                    setCookie('Ten_NVGH', tenNVGH, 7);
                    setCookie('Stt', Stt, 1);
                    var queryParams = 'Ngay_Ct=' + encodeURIComponent(ngayCt) +
                        '&So_Ct=' + encodeURIComponent(soCt) +
                        '&Ma_NVGH=' + encodeURIComponent(maNVGH) +
                        '&Ly_Do=' + encodeURIComponent(ghichu) +
                        '&Ten_NVGH=' + encodeURIComponent(tenNVGH) +
                        '&Nguoi_Nop_Tien=' + encodeURIComponent(nguoiNopTien) +
                        '&Stt=' + encodeURIComponent(Stt);
                    setTimeout(function () {
                        window.location.href = 'UpdateBangKeLoadHd1?' + queryParams;
                    }, 1000);
                });
                $(document).on('click', '.deleteRowBtn', function () {
                    $(this).closest('tr').remove();
                    calculateTotal();
                    saveTableRows();
                });
                // Lưu dữ liệu hàng của bảng khi có thay đổi trong ô input
                $(document).on('input', '#example tbody input', function () {
                    saveTableRows();
                });
                // Sự kiện thay đổi checkbox
                $(document).on('change', '.custom-checkbox', function () {
                    saveTableRows();
                });
                function setCookie(name, value, days) {
                    var expires = "";
                    if (days) {
                        var date = new Date();
                        date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
                        expires = "; expires=" + date.toUTCString();
                    }
                    document.cookie = name + "=" + (value || "") + expires + "; path=/";
                }
                // Hàm lưu giá trị Tien_Phai_Thu vào sessionStorage
                function saveTienPhaiThuToSession() {
                    let tienPhaiThuValues = [];
                    document.querySelectorAll('#example tbody tr').forEach(row => {
                        const tienPhaiThuInput = row.querySelector('input[name="Tien_Phai_Thu"]');
                        if (tienPhaiThuInput) {
                            const tienPhaiThu = parseFloat(tienPhaiThuInput.value) || 0;
                            tienPhaiThuValues.push(tienPhaiThu);
                        }
                    });
                    sessionStorage.setItem('tienPhaiThuValues', JSON.stringify(tienPhaiThuValues));
                }
            });
        </script>*@
</body>


</html>
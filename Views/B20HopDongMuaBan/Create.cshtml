@model web4.Models.B20HDMuaBan
@using Newtonsoft.Json;

@{
    ViewBag.Title = "Create Contract";
    var dataItemsDtJson = JsonConvert.SerializeObject(Model.DataItemsDt);
    var dataItemsTdvJson = JsonConvert.SerializeObject(Model.DataItemsTdv);
    var paymentDataJson = JsonConvert.SerializeObject(Model.PaymentData);
    var ckDataJson = JsonConvert.SerializeObject(Model.CKData);
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewBag.Title</title>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">

    <style>
        * {
            font-family: 'Roboto', sans-serif;
        }

        body {
            background-color: #f7f9fc;
            color: #333;
        }

        .container {
            max-width: 900px;
            margin-top: 30px;
        }

        .form-group label {
            font-weight: bold;
        }

        .btn-primary, .btn-secondary {
            width: 420px;
            height: 50px;
            font-size: 16px;
            border-radius: 5px;
        }

        .error-message {
            color: red;
            font-size: 0.875em;
        }

        .form-control:required:invalid {
            border-color: #dc3545;
        }

        .form-buttons {
            display: flex;
            justify-content: center;
            gap: 20px;
            margin-top: 20px;
        }

        .branch-code {
            background-color: #e9ecef;
            padding: 10px;
            border-radius: 5px;
            font-weight: bold;
            font-size: 1.1em;
        }

        .highlight-required {
            border-color: #dc3545 !important;
        }

        .red-border {
            border: 2px solid red !important;
        }
    </style>
</head>
<body>
    <div class="container">
        <h2 class="text-center mb-4" style="color: orangered;">THÊM HỢP ĐỒNG</h2>
        @if (!string.IsNullOrEmpty(Model.Ma_Dvcs))
        {
            <div class="alert alert-info">
                <strong>Mã Chi Nhánh:</strong> @Model.Ma_Dvcs
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <ul>
                    @foreach (var modelState in ViewData.ModelState.Values)
                    {
                        foreach (var error in modelState.Errors)
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    }
                </ul>
            </div>
        }

        <form id="createForm" method="post" action="@Url.Action("Create", "B20HopDongMuaBan")" novalidate>
            @Html.AntiForgeryToken()
            <input type="hidden" id="SelectedBranch" name="SelectedBranch" value="@Model.SelectedBranch" />
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label for="Ma_Dt">Chọn Mã Đối Tượng:</label>
                    <input type="text" id="Ma_Dt" name="Ma_Dt" class="form-control" required />
                </div>
                <div class="form-group col-md-4">
                    <label for="Ten_Dt">Tên Đối Tượng:</label>
                    <input type="text" id="Ten_Dt" name="Ten_Dt" class="form-control" readonly />
                </div>
                <div class="form-group col-md-4">
                    <label for="Dia_Chi">Địa Chỉ:</label>
                    <input type="text" id="Dia_Chi" name="Dia_Chi" class="form-control" readonly />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="Ma_TDV">Chọn Mã Trình Dược Viên:</label>
                    <input type="text" id="Ma_TDV" name="Ma_TDV" class="form-control" required />
                    <div class="error-message" id="maTdvError"></div>
                </div>
                <div class="form-group col-md-6">
                    <label for="Ten_TDV">Tên TDV:</label>
                    <input type="text" id="Ten_TDV" name="Ten_TDV" class="form-control" readonly />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label for="Loai_KH">Loại Khách Hàng:</label>
                    <input type="text" id="Loai_KH" name="Loai_KH" class="form-control" value="@Model.Loai_KH" />
                </div>
                <div class="form-group col-md-4">
                    <label for="Payment_ID_Text">Payment ID:</label>
                    <input type="text" id="Payment_ID_Text" name="Payment_ID" class="form-control" required />
                    <div class="error-message" id="paymentIdError"></div>
                </div>
                <div class="form-group col-md-4">
                    <label for="Payment_Text">Payment Text:</label>
                    <input type="text" id="Payment_Text" name="Payment_Text" class="form-control" readonly />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="CK_Display">Chiết Khấu:</label>
                    <input type="text" id="CK_Display" name="CK_Display" class="form-control" required />
                    <input type="hidden" id="CK" name="CK" />
                    <div class="error-message" id="ckError"></div>
                </div>
                <div class="form-group col-md-6">
                    <label for="MST">Mã Số Thuế:</label>
                    <input type="text" id="MST" name="MST" class="form-control" />
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4">
                    <label for="Ma_Dai_Dien">Mã Đại Diện:</label>
                    <input type="text" id="Ma_Dai_Dien" name="Ma_Dai_Dien" class="form-control" />
                </div>
                <div class="form-group col-md-4">
                    <label for="Ten_Dai_Dien">Tên Đại Diện:</label>
                    <input type="text" id="Ten_Dai_Dien" name="Ten_Dai_Dien" class="form-control" />
                </div>
                <div class="form-group col-md-4">
                    <label for="So_Dien_Thoai">Số Điện Thoại:</label>
                    <input type="text" id="So_Dien_Thoai" name="So_Dien_Thoai" class="form-control" />
                </div>
            </div>
            <div class="form-group">
                <label for="So_Hop_Dong">Số Hợp Đồng:</label>
                <input type="text" id="So_Hop_Dong" name="So_Hop_Dong" class="form-control red-border" value="@Model.So_Hop_Dong" />
                <div class="error-message" id="soHopDongError"></div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="Ky_Hieu_HD">Ký Hiệu HĐ:</label>
                    <input type="text" id="Ky_Hieu_HD" name="Ky_Hieu_HD" class="form-control" />
                </div>
                <div class="form-group col-md-6">
                    <label for="Hop_Dong_VIP">Hợp Đồng VIP:</label>
                    <input type="number" id="Hop_Dong_VIP" name="Hop_Dong_VIP" class="form-control" value="0" required />
                </div>
            </div>
            <div class="form-group">
                <label for="Doanh_Thu_Nam">Doanh Thu Năm:</label>
                <input type="number" id="Doanh_Thu_Nam" name="Doanh_Thu_Nam" class="form-control" step="0.01" value="0" required />
            </div>
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label for="Doanh_Thu_Q1">Doanh Thu Q1:</label>
                    <input type="number" id="Doanh_Thu_Q1" name="Doanh_Thu_Q1" class="form-control" step="0.01" value="0" required />
                </div>
                <div class="form-group col-md-3">
                    <label for="Doanh_Thu_Q2">Doanh Thu Q2:</label>
                    <input type="number" id="Doanh_Thu_Q2" name="Doanh_Thu_Q2" class="form-control" step="0.01" value="0" required />
                </div>
                <div class="form-group col-md-3">
                    <label for="Doanh_Thu_Q3">Doanh Thu Q3:</label>
                    <input type="number" id="Doanh_Thu_Q3" name="Doanh_Thu_Q3" class="form-control" step="0.01" value="0" required />
                </div>
                <div class="form-group col-md-3">
                    <label for="Doanh_Thu_Q4">Doanh Thu Q4:</label>
                    <input type="number" id="Doanh_Thu_Q4" name="Doanh_Thu_Q4" class="form-control" step="0.01" value="0" required />
                </div>
            </div>
            <div class="form-group">
                <label for="Ngay_Ky">Ngày Ký:</label>
                <input type="text" id="Ngay_Ky" name="Ngay_Ky" class="form-control" value="@(Model.Ngay_Ky.HasValue ? Model.Ngay_Ky.Value.ToString("yyyy/MM/dd") : string.Empty)" />
            </div>

            <div class="form-row">
                <div class="form-group col-md-6">
                    <label for="TG_Ky_HD">Thời Gian Ký Hợp Đồng:</label>
                    <input type="text" id="TG_Ky_HD" name="TG_Ky_HD" class="form-control" />
                </div>
                <div class="form-group col-md-6">
                    <label for="TG_Th_HD">Thời Gian Thực Hiện Hợp Đồng:</label>
                    <input type="text" id="TG_Th_HD" name="TG_Th_HD" class="form-control" />
                </div>
            </div>
            <div class="form-buttons">
                <input type="submit" value="Thêm Hợp Đồng" class="btn btn-primary" />
                <a href="@Url.Action("Index", "B20HopDongMuaBan")" class="btn btn-secondary">Quay lại</a>
            </div>
        </form>
    </div>

    <script>
        $(document).ready(function () {
            var dataItemsDt = @Html.Raw(dataItemsDtJson);
            var dataItemsTdv = @Html.Raw(dataItemsTdvJson);
            var paymentData = @Html.Raw(paymentDataJson);
            var ckData = @Html.Raw(ckDataJson);

            function setupAutocomplete(inputId, data, onSelectCallback) {
                $("#" + inputId).autocomplete({
                    source: function (request, response) {
                        var term = request.term.toLowerCase();
                        var results = data.filter(function (item) {
                            return item.Ma_Dt.toLowerCase().includes(term) || item.Ten_Dt.toLowerCase().includes(term);
                        }).map(function (item) {
                            return {
                                label: item.Ma_Dt + " - " + item.Ten_Dt,
                                value: item.Ma_Dt,
                                maDt: item.Ma_Dt,
                                tenDt: item.Ten_Dt,
                                diaChi: item.Dia_Chi
                            };
                        });
                        response(results);
                    },
                    minLength: 1,
                    select: function (event, ui) {
                        $("#" + inputId).val(ui.item.value);
                        if (onSelectCallback) {
                            onSelectCallback(ui.item);
                        }
                        return false;
                    }
                }).autocomplete("instance")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "</div>")
                        .appendTo(ul);
                };
            }

            function setupAutocompleteTdv(inputId, data, onSelectCallback) {
                $("#" + inputId).autocomplete({
                    source: function (request, response) {
                        var term = request.term.toLowerCase();
                        var results = data.filter(function (item) {
                            return item.Ma_CbNv.toLowerCase().includes(term) || item.hoten.toLowerCase().includes(term);
                        }).map(function (item) {
                            return {
                                label: item.Ma_CbNv + " - " + item.hoten,
                                value: item.Ma_CbNv,
                                maCbNv: item.Ma_CbNv,
                                hoTen: item.hoten
                            };
                        });
                        response(results);
                    },
                    minLength: 1,
                    select: function (event, ui) {
                        $("#" + inputId).val(ui.item.value);
                        if (onSelectCallback) {
                            onSelectCallback(ui.item);
                        }
                        return false;
                    }
                }).autocomplete("instance")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "</div>")
                        .appendTo(ul);
                };
            }

            function setupAutocompletePayment(inputId, data, onSelectCallback) {
                $("#" + inputId).autocomplete({
                    source: function (request, response) {
                        var term = request.term.toLowerCase();
                        var results = data.filter(function (item) {
                            return item.PaymentId.toLowerCase().includes(term) || item.PaymentText.toLowerCase().includes(term);
                        }).map(function (item) {
                            return {
                                label: item.PaymentId + " - " + item.PaymentText,
                                value: item.PaymentId,
                                paymentId: item.PaymentId,
                                paymentText: item.PaymentText
                            };
                        });
                        response(results);
                    },
                    minLength: 1,
                    select: function (event, ui) {
                        $("#" + inputId).val(ui.item.value);
                        $("#Payment_Text").val(ui.item.paymentText);
                        if (onSelectCallback) {
                            onSelectCallback(ui.item);
                        }
                        return false;
                    }
                }).autocomplete("instance")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "</div>")
                        .appendTo(ul);
                };
            }

            var ckDataArray = ckData.map(function (item) {
                return { key: item.Key.toString(), value: item.Value.toString() };
            });

            function setupAutocompleteCK(inputId, data, onSelectCallback) {
                $("#" + inputId).autocomplete({
                    source: function (request, response) {
                        var term = request.term.toLowerCase();
                        var results = data.filter(function (item) {
                            return item.key.toLowerCase().includes(term) || item.value.toLowerCase().includes(term);
                        }).map(function (item) {
                            return {
                                label: item.key + " - " + item.value,
                                value: item.value, // Display the value
                                key: item.key // Store the key
                            };
                        });
                        response(results);
                    },
                    minLength: 1,
                    select: function (event, ui) {
                        $("#CK_Display").val(ui.item.value); // Display the value
                        $("#CK").val(ui.item.key); // Store the key
                        if (onSelectCallback) {
                            onSelectCallback(ui.item);
                        }
                        return false;
                    }
                }).autocomplete("instance")._renderItem = function (ul, item) {
                    return $("<li>")
                        .append("<div>" + item.label + "</div>")
                        .appendTo(ul);
                };
            }

            setupAutocomplete("Ma_Dt", dataItemsDt, function (selectedItem) {
                $("#Dia_Chi").val(selectedItem.diaChi);
                $("#Ten_Dt").val(selectedItem.tenDt);
            });

            setupAutocompleteTdv("Ma_TDV", dataItemsTdv, function (selectedItem) {
                $("#Ten_TDV").val(selectedItem.hoTen);
            });

            setupAutocompletePayment("Payment_ID_Text", paymentData);

            setupAutocompleteCK("CK_Display", ckDataArray);

            // Custom Datepicker for TG_Ky_HD and TG_Th_HD
            $("#TG_Ky_HD, #TG_Th_HD").datepicker({
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                dateFormat: 'yy/mm',
                onClose: function(dateText, inst) {
                    var month = ("0" + (inst.selectedMonth + 1)).slice(-2); // Format month as 2 digits
                    var year = inst.selectedYear;
                    $(this).val(year + '/' + month);
                }
            }).focus(function() {
                $(".ui-datepicker-calendar").hide();
                $(".ui-datepicker-current").hide();
            });

            $("#Ngay_Ky").datepicker({
                dateFormat: 'yy/mm/dd',
                changeMonth: true,
                changeYear: true,
                defaultDate: new Date()
            }).datepicker("setDate", new Date());

            // Client-side validation with custom messages
            $("#createForm").on("submit", function(event) {
                let isValid = true;

                if ($("#Ma_Dt").val().trim() === "") {
                    $("#maDoiTuongError").text("Vui Lòng Chọn Mã Đối Tượng");
                    isValid = false;
                } else {
                    $("#maDoiTuongError").text("");
                }

                if ($("#Ma_TDV").val().trim() === "") {
                    $("#maTdvError").text("Vui Lòng Chọn Mã Trình Dược Viên");
                    isValid = false;
                } else {
                    $("#maTdvError").text("");
                }

                if ($("#Payment_ID_Text").val().trim() === "") {
                    $("#paymentIdError").text("Vui Lòng Chọn Payment ID");
                    isValid = false;
                } else {
                    $("#paymentIdError").text("");
                }

                if ($("#CK_Display").val().trim() === "") {
                    $("#ckError").text("Vui Lòng Chọn Chiết Khấu");
                    isValid = false;
                } else {
                    $("#ckError").text("");
                }

                if ($("#So_Hop_Dong").val().trim() === "") {
                    $("#soHopDongError").text("Vui Lòng Nhập Số Hợp Đồng");
                    isValid = false;
                } else {
                    $("#soHopDongError").text("");
                }
                // Xóa giá trị của Ngay_Ky nếu nó để trống
                if ($("#Ngay_Ky").val().trim() === "") {
                    $("#Ngay_Ky").val(null);
                }
                if (!isValid) {
                    event.preventDefault();
                }
            });
        });
    </script>
</body>
</html>